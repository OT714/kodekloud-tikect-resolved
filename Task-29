Task-29: Linux GPG Encryption
=============================

An investment in knowledge pays the best interest.

â€“ Benjamin Franklin


Task:
-----

We have confidential data that needs to be transferred to a remote location, so we need to encrypt that data.We also need to decrypt data we received from a remote location in order to understand its content.

On storage server in Stratos Datacenter we have private and public keys stored /home/*_key.asc. Use those keys to perform the following actions.

    Encrypt /home/encrypt_me.txt to /home/encrypted_me.asc.

    Decrypt /home/decrypt_me.asc to /home/decrypted_me.txt. (Passphrase for decryption and encryption is kodekloud).


Resolution:
------------

Steps
-----
 # Switch to root user
       - sudo su -
       - cd /home/
         ll
 #  To import the keys on the server  
       - gpg --import /home/public_key.asc

       - gpg --import /home/private_key.asc
          gpg --list-keys
          gpg --list-secret-keys

 #  Encrypt file
       
      -  gpg --encrypt -r kodekloud@kodekloud.com --armor < encrypt_me.txt -o encrypted_me.asc
         ll
   
 #  Decrypt file
   
      -  gpg --decrypt decrypt_me.asc > decrypted_me.txt
         ll

 #  Verify 
     
       cat encrypt_me.txt 
       cat encrypted_me.asc 
       cat decrypt_me.asc 
       cat decrypted_me.txt 


===================================================================================================================================

GPG stands for GNU Privacy Guard, which is a free and open-source software used for encrypting and signing data. It uses the public key cryptography method for encryption and decryption of data. It is a popular tool for secure communication and data exchange, especially in the context of email communication.

GPG provides several features, including:

Encryption: It can be used to encrypt files, emails, and other data to ensure their confidentiality during transmission.

Digital signatures: GPG can be used to sign files and emails to ensure their authenticity and integrity. This is important to prevent tampering with the data during transmission.

Key management: GPG provides a way to manage public and private keys used for encryption and decryption of data. Users can generate and share their public keys with others, while keeping their private keys secure.

GPG has several use cases, some of which include:

Secure email communication: GPG can be used to encrypt and sign emails, ensuring that only the intended recipient can read the message, and that the message has not been tampered with during transmission.

Secure file transfer: GPG can be used to encrypt files before sending them over the internet, ensuring that only the intended recipient can access the file.

Digital signatures: GPG can be used to sign files and emails, providing a way to verify their authenticity and integrity. This is particularly useful for software distribution and updates.

Password management: GPG can be used to store and manage passwords in an encrypted form, providing an additional layer of security for sensitive data.

Overall, GPG is a versatile tool that provides a range of security features, making it an important tool for secure communication and data exchange in various settings.

==================================================================================================================================

similar tools like gpg
=======================

OpenSSL: A robust, full-featured open-source toolkit implementing the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols.

VeraCrypt: A free open-source disk encryption software that is designed to protect sensitive data by creating encrypted containers or partitions.

AxCrypt: A free, open-source encryption software for Windows that can encrypt individual files or entire folders.

7-Zip: A free and open-source file archiver utility that supports several compression algorithms and encryption standards.

BitLocker: A full-disk encryption feature included in Windows that provides protection for the operating system, fixed and removable volumes.

EncFS: A free, open-source encrypted filesystem for Unix-like systems, that provides an encrypted virtual filesystem that is transparently decrypted as needed.

===================================================================================================================================


OpenSSL is a widely used encryption tool that provides support for a variety of cryptographic algorithms. Here are the steps to encrypt and decrypt a file using OpenSSL:

Encrypt a file using OpenSSL:

Generate a random password and store it in a file:


- openssl rand -base64 32 > password.txt

Encrypt the file using the password:


- openssl enc -aes-256-cbc -salt -in plaintext.txt -out encrypted.txt -pass file:password.txt

The above command encrypts the file plaintext.txt using the AES 256-bit encryption algorithm in CBC mode with a randomly generated salt. The encrypted file is stored as encrypted.txt. The password is read from the file password.txt.

Share the encrypted file encrypted.txt with the intended recipient along with the password.

Decrypt a file using OpenSSL:

Obtain the encrypted file encrypted.txt and the password file password.txt from the sender.

Decrypt the file using the password:


- openssl enc -aes-256-cbc -d -salt -in encrypted.txt -out decrypted.txt -pass file:password.txt

The above command decrypts the file encrypted.txt using the AES 256-bit encryption algorithm in CBC mode with the salt obtained from the encrypted file. The decrypted file is stored as decrypted.txt. The password is read from the file password.txt.

Access the decrypted file decrypted.txt.

Note: OpenSSL can also be used to encrypt and decrypt data using other encryption algorithms and modes, such as RSA and OFB.